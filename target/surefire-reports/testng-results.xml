<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="17" passed="16" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-08-19T17:33:57 IST" name="APIsuite" finished-at="2025-08-19T17:34:02 IST" duration-ms="4422">
    <groups>
      <group name="healthCheck">
        <method signature="HealthTest.healthCheck()[pri:1, instance:com.restapi.test.HealthTest@350a94ce]" name="healthCheck" class="com.restapi.test.HealthTest"/>
      </group> <!-- healthCheck -->
    </groups>
    <test started-at="2025-08-19T17:33:57 IST" name="API Tests" finished-at="2025-08-19T17:34:02 IST" duration-ms="4422">
      <class name="com.restapi.test.AccountsTest">
        <test-method is-config="true" signature="setupData()[pri:0, instance:com.restapi.test.AccountsTest@7be3a9ce]" started-at="2025-08-19T17:34:00 IST" name="setupData" finished-at="2025-08-19T17:34:00 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupData -->
        <test-method signature="signUpUser()[pri:1, instance:com.restapi.test.AccountsTest@7be3a9ce]" started-at="2025-08-19T17:34:00 IST" name="signUpUser" description="Sign up a new user" depends-on-groups="healthCheck" finished-at="2025-08-19T17:34:00 IST" duration-ms="527" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- signUpUser -->
        <test-method signature="verifySignUpUserAndGenerateToken()[pri:2, instance:com.restapi.test.AccountsTest@7be3a9ce]" started-at="2025-08-19T17:34:00 IST" name="verifySignUpUserAndGenerateToken" description="Verify user sign up and generate token" finished-at="2025-08-19T17:34:01 IST" depends-on-methods="com.restapi.test.AccountsTest.signUpUser" duration-ms="489" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySignUpUserAndGenerateToken -->
        <test-method signature="signUpwithExistingEmail()[pri:3, instance:com.restapi.test.AccountsTest@7be3a9ce]" started-at="2025-08-19T17:34:01 IST" name="signUpwithExistingEmail" description="Sign up with existing email" finished-at="2025-08-19T17:34:01 IST" depends-on-methods="com.restapi.test.AccountsTest.signUpUser" duration-ms="27" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- signUpwithExistingEmail -->
        <test-method signature="loginWithIncorrectPassword()[pri:4, instance:com.restapi.test.AccountsTest@7be3a9ce]" started-at="2025-08-19T17:34:01 IST" name="loginWithIncorrectPassword" description="Login with incorrect password" finished-at="2025-08-19T17:34:02 IST" depends-on-methods="com.restapi.test.AccountsTest.signUpUser" duration-ms="451" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginWithIncorrectPassword -->
        <test-method signature="loginWithIncorrectEmail()[pri:5, instance:com.restapi.test.AccountsTest@7be3a9ce]" started-at="2025-08-19T17:34:02 IST" name="loginWithIncorrectEmail" description="Login with incorrect email" finished-at="2025-08-19T17:34:02 IST" depends-on-methods="com.restapi.test.AccountsTest.signUpUser" duration-ms="50" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginWithIncorrectEmail -->
      </class> <!-- com.restapi.test.AccountsTest -->
      <class name="com.restapi.test.HealthTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.restapi.test.HealthTest@350a94ce]" started-at="2025-08-19T17:33:56 IST" name="setUp" finished-at="2025-08-19T17:33:57 IST" duration-ms="979" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setupData()[pri:0, instance:com.restapi.test.HealthTest@350a94ce]" started-at="2025-08-19T17:33:57 IST" name="setupData" finished-at="2025-08-19T17:33:57 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupData -->
        <test-method signature="healthCheck()[pri:1, instance:com.restapi.test.HealthTest@350a94ce]" started-at="2025-08-19T17:33:57 IST" name="healthCheck" description="Health check to check if server is up" finished-at="2025-08-19T17:34:00 IST" duration-ms="2289" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- healthCheck -->
      </class> <!-- com.restapi.test.HealthTest -->
      <class name="com.restapi.test.NegativeBookTest">
        <test-method is-config="true" signature="setupData()[pri:0, instance:com.restapi.test.NegativeBookTest@2a685eba]" started-at="2025-08-19T17:34:01 IST" name="setupData" finished-at="2025-08-19T17:34:01 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupData -->
        <test-method signature="addBookWithInvalidTokenTest()[pri:0, instance:com.restapi.test.NegativeBookTest@2a685eba]" started-at="2025-08-19T17:34:01 IST" name="addBookWithInvalidTokenTest" description="Add a book with invalid token" finished-at="2025-08-19T17:34:01 IST" depends-on-methods="com.restapi.test.AccountsTest.signUpUser, com.restapi.test.AccountsTest.verifySignUpUserAndGenerateToken" duration-ms="30" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addBookWithInvalidTokenTest -->
        <test-method signature="deleteBookWithInvalidTokenTest()[pri:0, instance:com.restapi.test.NegativeBookTest@2a685eba]" started-at="2025-08-19T17:34:01 IST" name="deleteBookWithInvalidTokenTest" description="Delete book with invalid token" finished-at="2025-08-19T17:34:01 IST" depends-on-methods="com.restapi.test.AccountsTest.signUpUser, com.restapi.test.AccountsTest.verifySignUpUserAndGenerateToken" duration-ms="29" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteBookWithInvalidTokenTest -->
        <test-method signature="updateBookWithInvalidTokenTest()[pri:0, instance:com.restapi.test.NegativeBookTest@2a685eba]" started-at="2025-08-19T17:34:01 IST" name="updateBookWithInvalidTokenTest" description="Update book with invalid token" finished-at="2025-08-19T17:34:01 IST" depends-on-methods="com.restapi.test.AccountsTest.signUpUser, com.restapi.test.AccountsTest.verifySignUpUserAndGenerateToken" duration-ms="38" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateBookWithInvalidTokenTest -->
        <test-method signature="getAllBookWithInvalidTokenTest()[pri:0, instance:com.restapi.test.NegativeBookTest@2a685eba]" started-at="2025-08-19T17:34:01 IST" name="getAllBookWithInvalidTokenTest" description="Get all books with invalid token" finished-at="2025-08-19T17:34:01 IST" depends-on-methods="com.restapi.test.BookTest.addBooksTest" duration-ms="31" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAllBookWithInvalidTokenTest -->
        <test-method signature="getBookWithNonExistantIdTest()[pri:0, instance:com.restapi.test.NegativeBookTest@2a685eba]" started-at="2025-08-19T17:34:01 IST" name="getBookWithNonExistantIdTest" description="Get book with non-existent ID" finished-at="2025-08-19T17:34:01 IST" depends-on-methods="com.restapi.test.BookTest.addBooksTest" duration-ms="35" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getBookWithNonExistantIdTest -->
        <test-method signature="getBookWithInvalidIdTest()[pri:2, instance:com.restapi.test.NegativeBookTest@2a685eba]" started-at="2025-08-19T17:34:01 IST" name="getBookWithInvalidIdTest" description="Get book with invalid ID" finished-at="2025-08-19T17:34:01 IST" depends-on-methods="com.restapi.test.BookTest.addBooksTest" duration-ms="86" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getBookWithInvalidIdTest -->
      </class> <!-- com.restapi.test.NegativeBookTest -->
      <class name="com.restapi.test.BookTest">
        <test-method is-config="true" signature="setupData()[pri:0, instance:com.restapi.test.BookTest@1abfe081]" started-at="2025-08-19T17:34:01 IST" name="setupData" finished-at="2025-08-19T17:34:01 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupData -->
        <test-method signature="addBooksTest()[pri:1, instance:com.restapi.test.BookTest@1abfe081]" started-at="2025-08-19T17:34:01 IST" name="addBooksTest" description="Add a new book" finished-at="2025-08-19T17:34:01 IST" depends-on-methods="com.restapi.test.AccountsTest.signUpUser, com.restapi.test.AccountsTest.verifySignUpUserAndGenerateToken" duration-ms="45" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addBooksTest -->
        <test-method signature="getBookByIdTest()[pri:2, instance:com.restapi.test.BookTest@1abfe081]" started-at="2025-08-19T17:34:01 IST" name="getBookByIdTest" description="Get book by ID" finished-at="2025-08-19T17:34:01 IST" depends-on-methods="com.restapi.test.BookTest.addBooksTest" duration-ms="34" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getBookByIdTest -->
        <test-method signature="updateBookByIdTest()[pri:3, instance:com.restapi.test.BookTest@1abfe081]" started-at="2025-08-19T17:34:01 IST" name="updateBookByIdTest" description="Update book by ID" finished-at="2025-08-19T17:34:01 IST" depends-on-methods="com.restapi.test.BookTest.addBooksTest" duration-ms="52" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Book name should match after update expected [Harry Potter and the Sorcerer's Stone chapter -1 Updated] but found [Harry Potter and the Sorcerer's Stone]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Book name should match after update expected [Harry Potter and the Sorcerer's Stone chapter -1 Updated] but found [Harry Potter and the Sorcerer's Stone]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:656)
at com.restapi.test.BookTest.updateBookByIdTest(BookTest.java:67)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:228)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:961)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:201)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:819)
at org.testng.TestRunner.run(TestRunner.java:619)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1228)
at org.testng.TestNG.runSuites(TestNG.java:1134)
at org.testng.TestNG.run(TestNG.java:1101)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:308)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:71)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:113)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateBookByIdTest -->
        <test-method signature="getAllBooks()[pri:4, instance:com.restapi.test.BookTest@1abfe081]" started-at="2025-08-19T17:34:01 IST" name="getAllBooks" description="Get all books" finished-at="2025-08-19T17:34:01 IST" depends-on-methods="com.restapi.test.BookTest.addBooksTest" duration-ms="37" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAllBooks -->
        <test-method signature="deleteBookByIdTest()[pri:5, instance:com.restapi.test.BookTest@1abfe081]" started-at="2025-08-19T17:34:02 IST" name="deleteBookByIdTest" description="Delete book by ID" finished-at="2025-08-19T17:34:02 IST" depends-on-methods="com.restapi.test.BookTest.addBooksTest" duration-ms="48" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteBookByIdTest -->
      </class> <!-- com.restapi.test.BookTest -->
    </test> <!-- API Tests -->
  </suite> <!-- APIsuite -->
</testng-results>
